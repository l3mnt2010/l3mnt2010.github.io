<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>zypper on l3mnt2010&#39;s Blog</title>
    <link>https://l3mnt2010.github.io/tags/zypper/</link>
    <description>Recent content in zypper on l3mnt2010&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>zoltan.balogh@suse.com (l3mnt2010 Balogh)</managingEditor>
    <webMaster>zoltan.balogh@suse.com (l3mnt2010 Balogh)</webMaster>
    <copyright>Â© l3mnt2010 Balogh 2021</copyright>
    <lastBuildDate>Sat, 04 Mar 2023 03:27:12 +0300</lastBuildDate><atom:link href="https://l3mnt2010.github.io/tags/zypper/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cross build and packaging</title>
      <link>https://l3mnt2010.github.io/cross-build-and-packaging/</link>
      <pubDate>Sat, 04 Mar 2023 03:27:12 +0300</pubDate>
      <author>zoltan.balogh@suse.com (l3mnt2010 Balogh)</author>
      <guid>https://l3mnt2010.github.io/cross-build-and-packaging/</guid>
      <description>Introduction Let&amp;rsquo;s start by clarifying what we mean by cross-building and cross-packaging. Cross-compilation is the process of compiling source code on one platform, called the host, in order to generate an executable binary for a different target platform. The emphasis here is on the word &amp;ldquo;different&amp;rdquo;. The target platform may have a different CPU architecture, such as when we work on an x86 computer and want to build software for a Raspberry Pi board with an ARM CPU.</description>
    </item>
    
    <item>
      <title>Reverse dependencies</title>
      <link>https://l3mnt2010.github.io/reverse-dependencies/</link>
      <pubDate>Wed, 01 Feb 2023 19:15:12 +0300</pubDate>
      <author>zoltan.balogh@suse.com (l3mnt2010 Balogh)</author>
      <guid>https://l3mnt2010.github.io/reverse-dependencies/</guid>
      <description>As start let&amp;rsquo;s sort it out what is dependency and what is reverse dependency. Dependencies and reverse dependencies in Linux distributions are important concepts to understand. A package dependency means that another package relies on it in order to function. For example, if package B requires package A to be installed in order to work, then package B is dependent on package A and is considered a reverse dependency of package A.</description>
    </item>
    
    <item>
      <title>Checking changelogs with zypper</title>
      <link>https://l3mnt2010.github.io/checking-changelogs-with-zypper/</link>
      <pubDate>Fri, 11 Nov 2022 11:11:11 +0300</pubDate>
      <author>zoltan.balogh@suse.com (l3mnt2010 Balogh)</author>
      <guid>https://l3mnt2010.github.io/checking-changelogs-with-zypper/</guid>
      <description>I have heard way to often the question from Linux and specially SUSE Linux users that &amp;ldquo;How can I check the changelog of a package or new version of a package available on the repository, but not yet installed&amp;rdquo;.
There was no easy answer for that question, so I have decided to make a little tool for that.
How it is done All the enabled repositories have a bunch of configuration files in a well structured directory tree under the /var/cache/zypp/raw/.</description>
    </item>
    
  </channel>
</rss>
